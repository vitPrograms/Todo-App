{"version":3,"sources":["Todo/TodoItem.js","Todo/TodoList.js","Todo/TodoAdd.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","todo","index","checkTodo","deleteTodo","completed","className","onClick","id","title","styles","ul","position","listStyle","margin","padding","width","TodoList","props","todos","length","style","map","TodoAdd","createTodo","useState","value","setValue","placeholder","onChange","event","target","trim","autoFocus","Loader","App","React","setTodos","loading","setLoading","useEffect","fetch","then","response","json","filter","concat","Date","now","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAEe,SAASA,EAAT,GAAwD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,WACtD,OACIH,EAAKI,UACD,qBAAIC,UAAU,sBAAd,UACI,uBAAMC,QAAS,kBAAMJ,EAAUF,EAAKO,KAApC,UACI,iCAASN,EAAQ,IAChBD,EAAKQ,SAEV,wBAAQH,UAAU,mBAAmBC,QAAS,kBAAMH,EAAWH,EAAKO,KAApE,qBAGJ,qBAAIF,UAAU,YAAd,UACI,uBAAMC,QAAS,kBAAMJ,EAAUF,EAAKO,KAApC,UACI,iCAASN,EAAQ,IAChBD,EAAKQ,SAEV,wBAAQH,UAAU,mBAAmBC,QAAS,kBAAMH,EAAWH,EAAKO,KAApE,qBCfhB,IAAME,EAAS,CACXC,GAAI,CACAC,SAAU,WACVC,UAAW,OACXC,OAAQ,EACRC,QAAS,EACTC,MAAO,SAIA,SAASC,EAASC,GAC7B,OACIA,EAAMC,MAAMC,OACZ,oBAAIC,MAAOX,EAAOC,GAAlB,SACMO,EAAMC,MAAMG,KAAI,SAACrB,EAAMC,GAAP,OAClB,cAACF,EAAD,CAAUC,KAAMA,EACRC,MAAOA,EAEPE,WAAYc,EAAMd,WAClBD,UAAWe,EAAMf,WAFZF,EAAKO,SAMlB,oBAAIF,UAAU,mBAAd,gCCxBG,SAASiB,EAAT,GAAiC,IAAdC,EAAa,EAAbA,WAC9B,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OACI,sBAAKrB,UAAU,qBAAf,UACI,uBAAOoB,MAAOA,EAAOE,YAAY,kBAAkBtB,UAAU,UAAUuB,SAAU,SAACC,GAAD,OAAWH,EAASG,EAAMC,OAAOL,UAClH,wBAAQnB,QAVhB,SAAiBuB,GACVJ,EAAMM,SACLR,EAAWE,GACXC,EAAS,MAOiBM,WAAW,EAArC,yBCbG,SAASC,IACpB,OACI,sBAAK5B,UAAU,aAAf,UAA4B,wBAAW,2BC8ChC6B,MA7Cf,WACE,MAA0BC,IAAMX,SAAS,IAAzC,mBAAON,EAAP,KAAckB,EAAd,KACA,EAA8BD,IAAMX,UAAS,GAA7C,mBAAOa,EAAP,KAAgBC,EAAhB,KAgCA,OA9BAC,qBAAU,WACRC,MAAM,uDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAvB,GACJkB,EAASlB,GACToB,GAAW,QAEd,IAwBD,sBAAKjC,UAAU,UAAf,UACE,2CACCgC,EAAU,cAACJ,EAAD,IACX,cAACjB,EAAD,CAAUE,MAAOA,EAAOf,WAzB5B,SAAoBI,GAClB6B,EAASlB,EAAM0B,QAAO,SAAA5C,GAAI,OAAIA,EAAKO,KAAOA,OAwBQL,UArBpD,SAAoBK,GAClB6B,EAASlB,EAAMG,KAAI,SAAArB,GAGjB,OAFGA,EAAKO,KAAOA,IACbP,EAAKI,WAAaJ,EAAKI,WAClBJ,SAmBP,cAACsB,EAAD,CAASC,WAdb,SAAoBf,GAClB4B,EAASlB,EAAM2B,OAAO,CACpBtC,GAAGuC,KAAKC,MACR3C,WAAW,EACXI,kBCvBSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.66a01528.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function TodoItem({todo, index, checkTodo, deleteTodo}){\r\n    return (\r\n        todo.completed ? (\r\n            <li className='item-list completed'>\r\n                <span onClick={() => checkTodo(todo.id)}>\r\n                    <strong>{index + 1}</strong> \r\n                    {todo.title}\r\n                </span>\r\n                <button className='delete-todo-icon' onClick={() => deleteTodo(todo.id)}>&times;</button>\r\n            </li>\r\n        ) : (\r\n            <li className='item-list'>\r\n                <span onClick={() => checkTodo(todo.id)}>\r\n                    <strong>{index + 1}</strong> \r\n                    {todo.title}\r\n                </span>\r\n                <button className='delete-todo-icon' onClick={() => deleteTodo(todo.id)}>&times;</button>\r\n            </li>\r\n        )\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst styles = {\r\n    ul: {\r\n        position: 'relative',\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0,\r\n        width: '100%'\r\n    }\r\n}\r\n\r\nexport default function TodoList(props){\r\n    return (\r\n        props.todos.length ? (\r\n        <ul style={styles.ul}>\r\n            { props.todos.map((todo, index) => \r\n            <TodoItem todo={todo} \r\n                    index={index} \r\n                    key={todo.id} \r\n                    deleteTodo={props.deleteTodo}\r\n                    checkTodo={props.checkTodo} \r\n                    />) }\r\n        </ul>\r\n        ) : (\r\n            <h3 className='empty-list-label'>Todo list is empty</h3>\r\n        )\r\n    )\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TodoAdd({ createTodo }){\r\n    const [value, setValue] = useState('')\r\n\r\n    function addTodo(event){\r\n        if(value.trim()){\r\n            createTodo(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='add-todo-container'>\r\n            <input value={value} placeholder='Enter your todo' className='message' onChange={(event) => setValue(event.target.value)}/>\r\n            <button onClick={addTodo} autoFocus={true}>Add todo</button>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Loader(){\r\n    return (\r\n        <div className=\"lds-ripple\"><div></div><div></div></div>\r\n    )\r\n}","import React, { useEffect } from 'react'\nimport TodoList from './Todo/TodoList'\nimport TodoAdd from './Todo/TodoAdd'\nimport Loader from './Loader'\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n      .then(response => response.json())\n      .then(todos => {\n        setTodos(todos)\n        setLoading(false)\n      } )\n  }, [])\n\n  function removeTodo(id){\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function toggleTodo(id){\n    setTodos(todos.map(todo => {\n      if(todo.id === id)\n        todo.completed = !todo.completed\n      return todo\n    })\n    )\n  }\n\n  function createTodo(title){\n    setTodos(todos.concat({\n      id:Date.now(),\n      completed: false,\n      title\n    }))\n  }\n  \n  return (\n    <div className='wrapper' >\n      <h1>Todo List</h1>\n      {loading ? <Loader /> : (\n      <TodoList todos={todos} deleteTodo={removeTodo} checkTodo={toggleTodo}/>\n      )}\n      <TodoAdd createTodo={createTodo}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}